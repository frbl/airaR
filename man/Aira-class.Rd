% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aira.R
\docType{class}
\name{Aira-class}
\alias{Aira}
\alias{Aira-class}
\title{The aira main class.}
\description{
The aira main class.
}
\section{Fields}{

\describe{
\item{\code{bootstrap_iterations}}{the number of bootstrap iterations to do for determining the significance of the effects}

\item{\code{horizon}}{the number of steps to look in the future}

\item{\code{var_model}}{the var model to perform the calculations on}

\item{\code{orthogonalize}}{use orthogonalized IRF}
}}
\section{Methods}{

\describe{
\item{\code{determine_best_node_from_all()}}{Returns the total effect a variable has on all other variables in the network.
If bootstrap iterations provided to aira is 0, we will not run any bootstrapping.
If bootstrap iterations >0, we will only consider the significant effects in the response}

\item{\code{determine_effect_network(include_autoregressive_effects = FALSE)}}{Returns the summed effect each node has on the other nodes node
@param include_autoregressive_effects if enabled, autoregressive effects are used (default FALSE). Not yet supported!}

\item{\code{determine_length_of_effect(variable_name, response, measurement_interval,
  first_effect_only = FALSE, plot_results = FALSE)}}{Returns the time in minues a variable is estimated to have an effect on another variable.
@param variable_to_shock the name of the variable to receive the shock
@param variable_to_respond the name of the variable to respond to the shock
@param measurement interval the time in minutes between two measurements}

\item{\code{determine_percentage_effect(variable_to_improve, percentage)}}{Returns the percentage for each variable in the network (other then the provided variable)
to be changed in order to change the variable_to_improve with the given percentage.
@param variable_to_improve the name of the variable in the network which we'd like to improve
@param percentage the percentage with which we'd like to improve the variable to improve}

\item{\code{get_all_variable_names()}}{returns all variables in the var model}
}}

